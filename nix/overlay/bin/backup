#!/bin/bash

SOURCE=".dotfiles .dotfiles-private .ssh .gnupg .zsh_history $XDG_STATE_HOME/wl-clipboard-manager .password-store .password-store-g .mozilla .mail giveffektivt enowise cloud decrypted $XDG_STATE_HOME/pgcli"
BACKUP_PATH="/run/media/$USER/backup_wd_data"
BACKUP_DIR="$BACKUP_PATH/$(date +%Y-%m-%d)"

error() {
    echo >&2 "$@"
    exit 1
}

cd "$HOME"

[ -d "$BACKUP_PATH" ] || error "Backup destination '$BACKUP_PATH' does not exist, aborting."

for src in $SOURCE; do
    [[ -f "$src" || (-d "$src" && -n "$(ls -A "$src")") ]] || error "Backup source '$src' is empty or absent, aborting."
done

if [ -d "$BACKUP_DIR" ]; then
    read -p "Backup directory '$BACKUP_DIR' already exists, merge? [y/n] " -n 1 -r
    echo
    [[ $REPLY =~ ^[Yy]$ ]] || error "Aborted."
fi

echo -e "\nBackup STARTED\n\nSource(s):   $SOURCE\nDestination: $BACKUP_DIR\n"
mkdir -p "$BACKUP_DIR"
rsync -a --info=progress2 $SOURCE "$BACKUP_DIR"
exitcode=$?

if [ "$exitcode" -eq "0" ]; then
    echo -e "\nBackup SUCCESSFUL"
else
    echo -e "\nBackup FAILED"
fi

echo -e "\n-------------------------------------------------------------------"

echo -e "\nBackup size:\n"
dua "$BACKUP_DIR" | tail -1

echo -e "\nRemaining disk space\n"
dfrs -kh "$BACKUP_PATH"

exit $exitcode
